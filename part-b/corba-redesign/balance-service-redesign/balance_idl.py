# Python stubs generated by omniidl from balance.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "Balance"
#
__name__ = "Balance"
_0_Balance = omniORB.openModule("Balance", r"balance.idl")
_0_Balance__POA = omniORB.openModule("Balance__POA", r"balance.idl")


# interface BankingServer
_0_Balance._d_BankingServer = (omniORB.tcInternal.tv_objref, "IDL:Balance/BankingServer:1.0", "BankingServer")
omniORB.typeMapping["IDL:Balance/BankingServer:1.0"] = _0_Balance._d_BankingServer
_0_Balance.BankingServer = omniORB.newEmptyClass()
class BankingServer :
    _NP_RepositoryId = _0_Balance._d_BankingServer[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Balance.BankingServer = BankingServer
_0_Balance._tc_BankingServer = omniORB.tcInternal.createTypeCode(_0_Balance._d_BankingServer)
omniORB.registerType(BankingServer._NP_RepositoryId, _0_Balance._d_BankingServer, _0_Balance._tc_BankingServer)

# BankingServer operations and attributes
BankingServer._d_get_balance = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), ((omniORB.tcInternal.tv_string,0), ), None)

# BankingServer object reference
class _objref_BankingServer (CORBA.Object):
    _NP_RepositoryId = BankingServer._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def get_balance(self, *args):
        return self._obj.invoke("get_balance", _0_Balance.BankingServer._d_get_balance, args)

omniORB.registerObjref(BankingServer._NP_RepositoryId, _objref_BankingServer)
_0_Balance._objref_BankingServer = _objref_BankingServer
del BankingServer, _objref_BankingServer

# BankingServer skeleton
__name__ = "Balance__POA"
class BankingServer (PortableServer.Servant):
    _NP_RepositoryId = _0_Balance.BankingServer._NP_RepositoryId


    _omni_op_d = {"get_balance": _0_Balance.BankingServer._d_get_balance}

BankingServer._omni_skeleton = BankingServer
_0_Balance__POA.BankingServer = BankingServer
omniORB.registerSkeleton(BankingServer._NP_RepositoryId, BankingServer)
del BankingServer
__name__ = "Balance"

#
# End of module "Balance"
#
__name__ = "balance_idl"

_exported_modules = ( "Balance", )

# The end.

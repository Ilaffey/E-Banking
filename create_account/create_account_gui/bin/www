
var app = require('../app');
var debug = require('debug')('withdraw-gui:server');
var http = require('http');

/**
 * Express port from store.
 */

var portNo = process.env.PORT || '5000'
var port = normalizePort(portNo);
app.set('port', port);



var server = http.createServer(app);

/**
 * All network interfaces fro provided ports.
 */

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * port data will be a number, string, or false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}



function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // reply with messages when erros occur
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}



function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
